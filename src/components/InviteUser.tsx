import { useState, useEffect } from 'react';

import { Channel, UserData, apiService } from '@/utils/api';

import styles from '../styles/main-page.module.css';



const InviteSection = () => {




    const [channels, setChannels] = useState<Channel[]>([]);
    const [userData, setUserData] = useState<UserData | null>(null);
    const [referralLink, referralLinkData] = useState<string>("");
    const invitedFriends = 3;

    
    useEffect(() => {
        const fetchData = async () => {
        try {
            
            
        
            const channelsData = await apiService.getChannels('user-123');
            setChannels(channelsData);
            
            const userData = await apiService.getUserData('user-123');
            setUserData(userData);
            
            referralLinkData(userData.referralLink);

        } catch (error) {
            console.error(error);
        }
        };
        
        fetchData();
    }, []);


    const copyReferralLink = () => {
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
        const tempInput = document.createElement('textarea');
        tempInput.value = referralLink;
        document.body.appendChild(tempInput);
        
        try {
          // –í—ã–¥–µ–ª—è–µ–º –∏ –∫–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
          tempInput.select();
          tempInput.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
          
          // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Clipboard API
          if (navigator.clipboard) {
            navigator.clipboard.writeText(referralLink)
              .then(() => showCopyFeedback())
              .catch(() => alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π!'));
          } else {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            document.execCommand('copy');
            showCopyFeedback();
          }
        } catch (err) {
            alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π!');
        } finally {
          // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
          document.body.removeChild(tempInput);
        }
      };
      
      const showCopyFeedback = () => {
        // –í–º–µ—Å—Ç–æ alert –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const feedback = document.createElement('div');
        feedback.textContent = '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!';
        feedback.style.position = 'fixed';
        feedback.style.bottom = '20px';
        feedback.style.left = '50%';
        feedback.style.transform = 'translateX(-50%)';
        feedback.style.backgroundColor = '#34D399';
        feedback.style.color = 'white';
        feedback.style.padding = '10px 20px';
        feedback.style.borderRadius = '8px';
        feedback.style.zIndex = '1000';
        
        document.body.appendChild(feedback);
        
        setTimeout(() => {
          document.body.removeChild(feedback);
        }, 2000);
      };
      
    
    return (
        <div className={styles.inviteSection}>
            <h2 className={styles.sectionTitle}>üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π</h2>
            <div className={styles.referralBox}>
                <input
                type="text"
                value={referralLink}
                readOnly
                className={styles.referralInput}
                />
                <button onClick={copyReferralLink} className={styles.copyButton}>
                –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                </button>
            </div>
            <div className={styles.bonusInfo}>
                –ü–æ–ª—É—á–∏ —Ç–∏–∫–µ—Ç –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞! (+{invitedFriends})
            </div>
            </div>
    )
}


export default InviteSection;